buildscript {
    ext {
        springBootVersion = '3.2.5'
        springBootPlugin = '3.3.3'
        springDependencyManagement = '1.1.6'
        serenityCoreVersion = '3.1.15'
        serenityCucumberVersion = '3.1.15'
        cucumberVersion = '7.15.0'
        cucumberJunitVersion = '7.15.0'
        junitVersion = '5.9.1'
        restAssuredVersion = '5.4.0'
        springBeansVersion = '5.3.34'
        gatlingVersion = '3.9.2'
        scalaLibraryVersion = '2.13.12'
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:${serenityCoreVersion}"
    }
    /*
    configurations.all{
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.springframework' && details.requested.name.startsWith('spring-')) {
                details.useVersion "${springBeansVersion}"
                details.because 'Nexus IQ fix'
            }
        }
    }
    */
}

plugins {
    id "java"
    id "org.springframework.boot" version "${springBootPlugin}"
    id "io.spring.dependency-management" version "${springDependencyManagement}"
}

sourceSets {
    code {
        java.srcDir 'src/code/java'
        resources.srcDir 'src/code/resources'
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

group = 'org.ratnakar.practice'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    codeImplementation.canBeResolved = true
    codeImplementation.extendsFrom implementation
}

dependencies {
    // Development dependency (src/main)
    implementation("org.springframework.boot:spring-boot:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    runtimeOnly("com.mysql:mysql-connector-j")

    // Unit Testing Dependency (src/test)
    testImplementation platform("org.junit:junit-bom:${junitVersion}")
    testImplementation ("org.junit.jupiter:junit-jupiter")
    testImplementation("com.mysql:mysql-connector-j")
    testImplementation("org.springframework.boot:spring-boot:${springBootVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")

    // Development dependencies for code folder
    codeImplementation("org.springframework.boot:spring-boot:${springBootVersion}")
    codeImplementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    codeImplementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    codeImplementation("com.mysql:mysql-connector-j")
}

test {
    useJUnitPlatform()
}